name: release

on:
  workflow_dispatch:
  push:
    branch:
      - 'main'
  schedule:
    - cron: '0 * * * *'

env:
  CACHE_NUMBER: 1

permissions:
  contents: write

jobs:
  pdk:
    runs-on: ubuntu-latest
    outputs:
      VOLARE_PATH: ${{ steps.env.outputs.VOLARE_PATH }}
      VOLARE_REV: ${{ steps.env.outputs.VOLARE_REV }}
      VOLARE_DATE: ${{ steps.env.outputs.VOLARE_DATE }}
      VOLARE_SHORT: ${{ steps.env.outputs.VOLARE_SHORT }}
      OPEN_PDKS_REV: ${{ steps.env.outputs.OPEN_PDKS_REV }}
      OPEN_PDKS_SHORT: ${{ steps.env.outputs.OPEN_PDKS_SHORT }}
      OPEN_PDKS_DATE: ${{ steps.env.outputs.OPEN_PDKS_DATE }}
      GFMCU180_PDK_REV: ${{ steps.env.outputs.GFMCU180_PDK_REV }}
      GFMCU180_PDK_SHORT: ${{ steps.env.outputs.GFMCU180_PDK_SHORT }}
      GFMCU180_PDK_DATE: ${{ steps.env.outputs.GFMCU180_PDK_DATE }}
      TAG: ${{ steps.env.outputs.TAG }}
      TAG_EXISTS: ${{ steps.env.outputs.TAG_EXISTS }}
    steps:
      - uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: install volare
        run: |
          python -m venv env
          env/bin/python -m pip install -r requirements.txt
          env/bin/python -m pip install .

      - uses: actions/checkout@v3
        with:
          repository: 'RTimothyEdwards/open_pdks'
          ref: 'master'
          path: 'open_pdks'

      - uses: actions/checkout@v3
        with:
          repository: 'google/gf180mcu-pdk'
          ref: 'main'
          submodules: true
          path: 'gf180mcu-pdk'

      - uses: actions/checkout@v3
        with:
          repository: 'The-OpenROAD-Project/OpenLane'
          ref: 'master'
          path: 'OpenLane'

      - id: env
        name: env
        run: |
          VOLARE_PATH=$(env/bin/volare path)
          VOLARE_REV=$(git rev-parse HEAD)
          VOLARE_DATE=$(git log -1 --pretty=format:"%ad" --date=iso8601-strict | sed -e 's/+.*/Z/')
          VOLARE_SHORT=$(git rev-parse --short HEAD)
          echo "VOLARE_PATH=$VOLARE_PATH" >> $GITHUB_ENV
          echo "VOLARE_REV=$VOLARE_REV" >> $GITHUB_ENV
          echo "VOLARE_DATE=$VOLARE_DATE" >> $GITHUB_ENV
          echo "VOLARE_SHORT=$VOLARE_SHORT" >> $GITHUB_ENV
          echo "::set-output name=VOLARE_PATH::$VOLARE_PATH"
          echo "::set-output name=VOLARE_REV::$VOLARE_REV"
          echo "::set-output name=VOLARE_DATE::$VOLARE_DATE"
          echo "::set-output name=VOLARE_SHORT::$VOLARE_SHORT"
          OPEN_PDKS_PATH=$(readlink -f open_pdks)
          OPEN_PDKS_REV=$(cd $OPEN_PDKS_PATH && git rev-parse HEAD)
          OPEN_PDKS_SHORT=$(cd $OPEN_PDKS_PATH && git rev-parse --short HEAD)
          OPEN_PDKS_DATE=$(cd $OPEN_PDKS_PATH && git log -1 --pretty=format:"%ad" --date=iso8601-strict | sed -e 's/+.*/Z/')
          echo "OPEN_PDKS_PATH=$OPEN_PDKS_PATH" >> $GITHUB_ENV
          echo "OPEN_PDKS_REV=$OPEN_PDKS_REV" >> $GITHUB_ENV
          echo "OPEN_PDKS_SHORT=$OPEN_PDKS_SHORT" >> $GITHUB_ENV
          echo "OPEN_PDKS_DATE=$OPEN_PDKS_DATE" >> $GITHUB_ENV
          echo "::set-output name=OPEN_PDKS_REV::$OPEN_PDKS_REV"
          echo "::set-output name=OPEN_PDKS_DATE::$OPEN_PDKS_DATE"
          echo "::set-output name=OPEN_PDKS_SHORT::$OPEN_PDKS_SHORT"
          GFMCU180_PDK_PATH=$(readlink -f gf180mcu-pdk)
          GFMCU180_PDK_REV=$(cd $GFMCU180_PDK_PATH && git rev-parse HEAD)
          GFMCU180_PDK_SHORT=$(cd $GFMCU180_PDK_PATH && git rev-parse --short HEAD)
          GFMCU180_PDK_DATE=$(cd $GFMCU180_PDK_PATH && git log -1 --pretty=format:"%ad" --date=iso8601-strict | sed -e 's/+.*/Z/')
          echo "GFMCU180_PDK_PATH=$GFMCU180_PDK_PATH" >> $GITHUB_ENV
          echo "GFMCU180_PDK_REV=$GFMCU180_PDK_REV" >> $GITHUB_ENV
          echo "GFMCU180_PDK_SHORT=$GFMCU180_PDK_SHORT" >> $GITHUB_ENV
          echo "GFMCU180_PDK_DATE=$GFMCU180_PDK_DATE" >> $GITHUB_ENV
          echo "::set-output name=GFMCU180_PDK_REV::$GFMCU180_PDK_REV"
          echo "::set-output name=GFMCU180_PDK_DATE::$GFMCU180_PDK_DATE"
          echo "::set-output name=GFMCU180_PDK_SHORT::$GFMCU180_PDK_SHORT"
          TAG=gf180mcu-${OPEN_PDKS_SHORT}_${GFMCU180_PDK_SHORT}_${VOLARE_SHORT}
          TAG_EXISTS=$(git tag -l $TAG)
          echo "::set-output name=TAG::$TAG"
          echo "::set-output name=TAG_EXISTS::$TAG_EXISTS"

      - name: cache build
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.VOLARE_PATH }}/volare/gf180mcu/build/${{ env.OPEN_PDKS_REV}}
          key:
            ${{ runner.os }}-build-${{ env.CACHE_NUMBER }}-${{ env.OPEN_PDKS_REV }}-${{ env.GFMCU180_PDK_REV }}

      - name: build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          env/bin/volare build \
            --pdk gf180mcu \
            --metadata-file=OpenLane/dependencies/tool_metadata.yml \
            --use-repo-at open_pdks=$OPEN_PDKS_PATH \
            --use-repo-at gf180mcu=$GFMCU180_PDK_PATH

      - name: upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: gf180mcu-build-logs
          path: |
            ${{ env.VOLARE_PATH }}/volare/logs/*/*.log

      - name: compress
        run: |
          tar -C $VOLARE_PATH/volare/gf180mcu/build/$OPEN_PDKS_REV/ \
              -cvJhf default.tar.xz gf180mcuA/ gf180mcuB/ gf180mcuC/

      - uses: actions/upload-artifact@v3
        with:
          name: gf180mcu-build-pdks
          path: default.tar.xz

  release:
    needs: pdk
    if: ${{ needs.pdk.outputs.TAG_EXISTS == '' }}
    env:
      VOLARE_PATH: ${{ needs.pdk.outputs.VOLARE_PATH }}
      VOLARE_REV: ${{ needs.pdk.outputs.VOLARE_REV }}
      VOLARE_DATE: ${{ needs.pdk.outputs.VOLARE_DATE }}
      VOLARE_SHORT: ${{ needs.pdk.outputs.VOLARE_SHORT }}
      OPEN_PDKS_REV: ${{ needs.pdk.outputs.OPEN_PDKS_REV }}
      OPEN_PDKS_SHORT: ${{ needs.pdk.outputs.OPEN_PDKS_SHORT }}
      OPEN_PDKS_DATE: ${{ needs.pdk.outputs.OPEN_PDKS_DATE }}
      GFMCU180_PDK_REV: ${{ needs.pdk.outputs.GFMCU180_PDK_REV }}
      GFMCU180_PDK_SHORT: ${{ needs.pdk.outputs.GFMCU180_PDK_SHORT }}
      GFMCU180_PDK_DATE: ${{ needs.pdk.outputs.GFMCU180_PDK_DATE }}
      TAG: ${{ needs.pdk.outputs.TAG }}
      TAG_EXISTS: ${{ needs.pdk.outputs.TAG_EXISTS }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: gf180mcu-build-pdks

      - name: tag and push
        run: |
          git config --local user.name gf180mcu@bot
          git config --local user.email gf180mcu@bot
          git tag "$TAG"
          git push origin "HEAD:refs/tags/$TAG"

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.TAG }}
          tag_name: ${{ env.TAG }}
          body: |
            ${{ env.PDK_FAMILY }} variants built using open_pdks ${{ env.OPEN_PDKS_REV }} (released on ${{ env.OPEN_PDKS_DATE }})

            ```
            GFMCU180_PDK_REV=${{ env.GFMCU180_PDK_REV }}
            GFMCU180_PDK_DATE=${{ env.GFMCU180_PDK_DATE }}
            OPEN_PDKS_REV=${{ env.OPEN_PDKS_REV }}
            OPEN_PDKS_DATE=${{ env.OPEN_PDKS_DATE }}
            VOLARE_REV=${{ env.VOLARE_REV }}
            VOLARE_DATE=${{ env.VOLARE_DATE }}
            ```
          files: |
            default.tar.xz
